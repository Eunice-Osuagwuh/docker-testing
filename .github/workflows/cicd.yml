name: Build and deploy to ECR & EC2

on:
  push:
    branches:
      - main

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin 049820221364.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build, tag, and push image to Amazon ECR
        run: |
          IMAGE_URI=049820221364.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mediplus:${{ github.run_number }}

          echo "Building Docker image..."
          docker build -t $IMAGE_URI .

          echo "Pushing image to ECR..."
          docker push $IMAGE_URI

  deploy:
    runs-on: ubuntu-latest
    needs: build-push

    steps:
      - name: Setup SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" > mykey.pem
          chmod 600 mykey.pem

      - name: Deploy to EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no -i mykey.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            set -e

            AWS_REGION=${{ secrets.AWS_REGION }}
            IMAGE_URI=049820221364.dkr.ecr.${AWS_REGION}.amazonaws.com/mediplus:${{ github.run_number }}

            echo "Logging into ECR..."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 049820221364.dkr.ecr.${AWS_REGION}.amazonaws.com

            echo "Pulling latest Docker image..."
            docker pull $IMAGE_URI

            echo "Stopping and removing old container (if running)..."
            docker stop mediplus || true
            docker rm mediplus || true

            echo "Running new container..."
            docker run -d --restart unless-stopped --name mediplus -p 80:80 $IMAGE_URI

            echo "Cleaning up old images..."
            docker system prune -f

            echo "âœ… Deployment complete!"
          EOF
